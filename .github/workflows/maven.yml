# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#

name: "Build and Deploy"

on:
  push:
    branches: [ "master" ]

jobs:
  build-deploy:
    name: "Build and Deploy"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        servers: >
         [{
            "id": "packagecloud.release",
            "password": "${{ secrets.PACKAGECLOUDPASSWORD }}"
          },
          {
            "id": "packagecloud.snapshot",
            "password": "${{ secrets.PACKAGECLOUDPASSWORD }}"
          }]
        mirrors: >
         [{
            "id": "maven-default-http-blocker",
            "mirrorOf": "external:http:*",
            "name": "Pseudo repository to mirror external repositories initially using HTTP",
            "url": "http://0.0.0.0/",
            "blocked": "true"
         }]

    # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Build with Maven
      run: mvn -B clean install --file pom.xml
    
    - name: Deploy
      run: mvn deploy
